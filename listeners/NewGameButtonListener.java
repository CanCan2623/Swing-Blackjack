package listeners;

import panels.BlackJackPanel;
import panels.ControlPanel;
import panels.StatusPanel;

import states.GameStates;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * This class defines the object which listens for events on the "New Game" button.
 */
public class NewGameButtonListener implements ActionListener {

    /**
     * This function handles a click on the "New Game" button.
     * @param e The event generated by the click.
     */
    public void actionPerformed(ActionEvent e)
    {
        // this method gets the blackjack panel and status panel through what-
        // ever button created the event, and then get the user's bet
        JButton but = (JButton)e.getSource();
        ControlPanel cp = (ControlPanel)but.getParent();
        BlackJackPanel bp = (BlackJackPanel)cp.getParent();
        String uBet = cp.getBetTextFieldValue();
        int uBetI;
        StatusPanel sp = bp.getSp();

        /* Validate the bet input */
        // checks if bet is a positive integer, and that the user has enough 
        // money to make the bet
        if (isValidInt(uBet)) 
        {
            uBetI = Integer.parseInt(uBet); 

            if (uBetI > 0)
            {
                if (uBetI <= sp.getMoney()) 
                {
                    /* Handle the "New Game" (new hand) event */
                    sp.setBet(uBetI); // Set the bet in the status panel
                    bp.updatePanel(GameStates.GAMESTART); // Send a "start game" message to the main panel
                }

                else // The user tried to bet more money than they have
                {
                    JOptionPane.showMessageDialog(bp, "Your bet value, \"" + uBet + "\", is larger than the amount of money in your possession!", "Invalid Bet", JOptionPane.ERROR_MESSAGE); // Display an error for the user
                }
            }

            else // Invalid bet amount (<= 0)
            {
                JOptionPane.showMessageDialog(bp, "Your bet value, \"" + uBet + "\", cannot be less than or equal to 0!", "Invalid Bet", JOptionPane.ERROR_MESSAGE); // Display an error for the user
            }
        }

        else // The bet is not a valid integer
        {
            JOptionPane.showMessageDialog(bp, "Your bet value, \"" + uBet + "\", is not a valid integer!", "Invalid Bet", JOptionPane.ERROR_MESSAGE); // Display an error for the user
        }
    }

    /**
     * Determines whether or not a string represents a valid integer.
     * @param toCheck The string to check.
     * @return True if the string can be safely converted to an integer, false otherwise.
     */
    private boolean isValidInt(String toCheck)
    {
        try
        {
            Integer.parseInt(toCheck); 
            return true;
        }

        catch (NumberFormatException nfe) 
        {
            return false;
        }
    }
}
